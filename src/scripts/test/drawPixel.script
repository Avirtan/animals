local screen_service = require "src.services.screen_service"
local input_service = require "src.services.input_service"
local level_controller_service = require "src.services.controllers.level.level_controller_service"

function init(self)
    self.currentUrl = msg.url()
    -- go.animate("#sprite", "scale.x", go.PLAYBACK_LOOP_PINGPONG, 0.1, go.EASING_OUTBOUNCE, 2)
    -- go.animate("#sprite", "scale.y", go.PLAYBACK_LOOP_PINGPONG, 0.1, go.EASING_OUTBOUNCE, 2)
    input_service.addListener(input_service.events.mouse_move, self.currentUrl)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    if input_service.events.mouse_move == message_id then
        local x, y = screen_service.screen_to_world(message.x, message.y)
        local player = level_controller_service.get_player()
        local position_player = go.get_position(player)
        position_player.z = 0
        local current_position = vmath.vector3(x, y, 0)
        current_position = current_position - position_player

        local dir = current_position
        local len = vmath.length(current_position)
        -- print(current_position.x, " ", current_position.y)
        -- print(len)
        if len > 100 then
            local end_position = vmath.normalize(dir) * 100
            go.set_position(end_position)
            return
        end
        go.set_position(current_position)
    end
    if input_service.events.key == message_id then
        if message.x ~= 0 or message.y ~= 0 then
            go.set(".", "scale.x", 1)
            go.set(".", "scale.y", 1)
        else
            go.set(".", "scale.x", 0.5)
            go.set(".", "scale.y", 0.5)
        end
    end
end
