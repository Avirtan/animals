local events_service = require "src.services.events_service"
local input_service = require "src.services.input_service"
local anim_service = require "src.services.characters.animation_service"

go.property("speed", 0)
go.property("url_animation", msg.url())

local function resetMove(self)
    if self.dir.x ~= 0 or self.dir.y ~= 0 then
        self.animation_data_event.x = 0
        self.animation_data_event.y = 0
        msg.post(self.url_animation, events_service.animation_events.change_animation_event, self.animation_data_event)
        self.last_input.x = 0
        self.last_input.y = 0
        self.input.x = 0
        self.input.y = 0
    end
    self.dir.x = 0
    self.dir.y = 0
end

function init(self)
    self.dir                   = vmath.vector3(0, 0, 0)
    self.animation_data_event  = {
        x = 0,
        y = 0
    }
    self.last_input            = vmath.vector3(0, 0, 0)
    self.input                 = vmath.vector3(0, 0, 0)
    self.bindingsInput         = input_service.input_binding
    self.controller            = nil
    self.count_send_zero_input = 0
end

function update(self, dt)
    if self.dir.x == 0 and self.dir.y == 0 then
        return
    end

    local pos = go.get_position()
    pos = pos + self.dir * self.speed * dt
    go.set_position(pos)
end

function on_message(self, message_id, message, sender)
    if self.controller == nil then
        self.controller = sender
    end
    if message_id == input_service.events.key then
        keyEvent(self, message)
    elseif message_id == events_service.character_events.disable then
        resetMove(self)
    end
end

function keyEvent(self, message)
    local bindings = self.bindingsInput

    if message.action_id == bindings.up and self.input.y ~= -1 then
        self.input.y = message.released and 0 or 1
    elseif message.action_id == bindings.down and self.input.y ~= 1 then
        self.input.y = message.released and 0 or -1
    end

    if message.action_id == bindings.right and self.input.x ~= -1 then
        self.input.x = message.released and 0 or 1
    elseif message.action_id == bindings.left and self.input.x ~= 1 then
        self.input.x = message.released and 0 or -1
    end

    if self.last_input.x ~= self.input.x or self.last_input.y ~= self.input.y then
        self.animation_data_event.x = self.input.x
        self.animation_data_event.y = self.input.y
        msg.post(self.url_animation, events_service.animation_events.change_animation_event, self.animation_data_event)
        self.last_input.x = self.input.x
        self.last_input.y = self.input.y
        msg.post(self.controller, events_service.character_events.change_dir_move, {
            x = self.input.x,
            y = self.input.y
        })
    end

    if self.input.x ~= 0 or self.input.y ~= 0 then
        if self.input.x == 0 or self.input.y == 0 then
            self.dir = self.input
        else
            self.dir = vmath.normalize(self.input)
        end
    else
        self.dir.x = 0
        self.dir.y = 0
    end
end
